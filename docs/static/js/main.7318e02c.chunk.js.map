{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpectApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","category","type","value","onChange","target","getGifts","a","url","encodeURI","fetch","resp","json","data","gift","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OAEI,0BAAMC,SAbS,SAACC,GAChBA,EAAEC,iBAEFJ,GAAcF,GAAe,SAACO,GAAD,OAAgBL,GAAhB,mBAA8BK,OAC3DJ,EAAc,MAUX,2BACAK,KAAK,OACLC,MAAOP,EACPQ,SArBmB,SAAEL,GAExBF,EAAcE,EAAEM,OAAOF,Y,uBCNlBG,EAAQ,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DAEdC,EAFc,0FAE2EC,UAAUR,GAFrF,gDAGDS,MAAMF,GAHL,cAGdG,EAHc,gBAKGA,EAAKC,OALR,uBAKZC,EALY,EAKZA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDCARO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZN,mBAAS,CAC/BkB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA4BtC,OArBAC,qBAAU,WACNvB,EAASL,GACJ6B,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACzB,IAUG0B,EDxBuBK,CAAc/B,GAAjCkB,EAH0B,EAG/BN,KAAYa,EAHmB,EAGnBA,QAUlB,OACI,oCACI,wBAAKJ,UAAU,+CAAf,IAA+DrB,EAA/D,KACCyB,GAAW,uBAAIJ,UAAU,gDAAd,eACZ,yBAAKA,UAAU,+CAEVH,EAAOJ,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEQbkB,EA5BM,WAAM,MAGSvC,mBAAS,CAAC,aAHnB,mBAGpBwC,EAHoB,KAGRC,EAHQ,KAUvB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAa1C,cAAe0C,IAC5B,6BAEA,4BAEID,EAAWpB,KAAI,SAACd,GAAD,OACf,kBAAC,EAAD,CACAgC,IAAKhC,EACLA,SAAUA,UCvB1BoC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.7318e02c.chunk.js","sourcesContent":["import React,{ useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = ( e )=>{\r\n       // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handSubmit = (e) => {\r\n        e.preventDefault(); \r\n        //if corto \r\n        inputValue && setCategories( (category) => [ inputValue,...category] );      \r\n        setInputValue('');\r\n        // if( inputValue.trim().length>2){\r\n        //     setCategories(casts=>[...casts,inputValue]);\r\n        //     setInputValue('');\r\n        // }\r\n        //console.log('Submit hecho');\r\n    }\r\n    return (\r\n        \r\n        <form onSubmit={handSubmit}>\r\n           <input \r\n           type=\"text\"\r\n           value={inputValue}\r\n           onChange={handleInputChange}\r\n           />\r\n        </form>\r\n        \r\n    )\r\n    \r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifts = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=gy1xHmi2zaLuvttQLVbx4BmxjKD5U1aN&q=${encodeURI(category)}&limit=10&offset=0&rating=g&lang=es`\r\n    const resp = await fetch(url);\r\n    //console.log(resp);\r\n    const { data } = await resp.json();\r\n    const gift = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    }\r\n    )\r\n    return gift;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    //console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifts } from '../helpers/GetGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [count, setcount] = useState(0);\r\n   const {data:images,loading} =  useFetchGifs( category );\r\n\r\n    // const [images, setimages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getGifts(category)\r\n    //         .then(setimages)\r\n    // }, [ category]) \r\n\r\n    //getGifts();\r\n    return (\r\n        <>\r\n            <h3  className=\"card-grid animate__animated animate__fadeIn\"> {category} </h3>\r\n            {loading && <p  className=\"card-grid animate__animated animate__zoomIn \">Loading ...</p>}\r\n            <div className=\"card-grid animate__animated animate__fadeIn\">\r\n\r\n                {images.map((img) =>\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img} />\r\n                )}\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifts } from \"../helpers/GetGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then(imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n    // setTimeout(() => {\r\n    //     setstate({\r\n    //         data: [1,2,3,4,5,6],\r\n    //         loading: false\r\n    //     })\r\n\r\n    // }, 3000);\r\n\r\n    return state;\r\n\r\n}","import React,{ useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n//import PropTypes from 'prop-types';\r\n//import React, { Fragment } from 'react';\r\n// function Component \r\n\r\nconst GifExpertApp = () => {\r\n    \r\n//const categories = ['One Push','Samurai X','Dragon Ball']\r\nconst [categories, setcategories] = useState(['One Push']);\r\n\r\n// const handleAdd = ()=>{\r\n//    // setcategories([...categories,'HunterXHunter']);\r\n//     setcategories(cats =>[...cats,'HunterXHunter']);\r\n//     console.log(categories);\r\n// }\r\n    return (       \r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories={setcategories}/>\r\n            <hr></hr>\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                { \r\n                categories.map((category)=> (\r\n                <GifGrid \r\n                key={category}\r\n                category={category} />\r\n                ))\r\n                }\r\n            </ol>\r\n        </>        \r\n    );\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpectApp';\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}